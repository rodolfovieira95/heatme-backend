{
  "openapi": "3.0.0",
  "paths": {
    "/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos fornecidos"
          }
        },
        "summary": "Criar novo usuário",
        "tags": [
          "Usuários"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreateUserDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os usuários",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserDto"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        },
        "summary": "Buscar usuário por ID",
        "tags": [
          "Usuários"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos fornecidos"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        },
        "summary": "Atualizar usuário",
        "tags": [
          "Usuários"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário removido com sucesso"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        },
        "summary": "Remover usuário",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/auth/signup": {
      "post": {
        "operationId": "AuthController_signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário registrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email já cadastrado"
          }
        },
        "summary": "Registrar novo usuário",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas"
          }
        },
        "summary": "Login de usuário",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/profile/me": {
      "get": {
        "operationId": "ProfilesController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ]
      }
    },
    "/profile": {
      "post": {
        "operationId": "ProfilesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserProfileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ]
      },
      "patch": {
        "operationId": "ProfilesController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ]
      }
    },
    "/friends/{userId}": {
      "post": {
        "operationId": "FriendshipsController_sendRequest",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID do usuário que receberá a solicitação",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Solicitação de amizade enviada com sucesso"
          },
          "400": {
            "description": "Parâmetros inválidos"
          },
          "401": {
            "description": "Não autorizado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Enviar solicitação de amizade",
        "tags": [
          "Amizades"
        ]
      },
      "patch": {
        "operationId": "FriendshipsController_updateStatus",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID do usuário da amizade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFriendshipStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status da amizade atualizado com sucesso"
          },
          "400": {
            "description": "Parâmetros inválidos"
          },
          "401": {
            "description": "Não autorizado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar status da amizade",
        "tags": [
          "Amizades"
        ]
      },
      "delete": {
        "operationId": "FriendshipsController_removeFriend",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID do usuário da amizade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Amizade removida com sucesso"
          },
          "400": {
            "description": "Parâmetros inválidos"
          },
          "401": {
            "description": "Não autorizado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover amizade",
        "tags": [
          "Amizades"
        ]
      }
    },
    "/friends": {
      "get": {
        "operationId": "FriendshipsController_listFriends",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de amigos retornada com sucesso"
          },
          "401": {
            "description": "Não autorizado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar amigos",
        "tags": [
          "Amizades"
        ]
      }
    },
    "/friends/pending": {
      "get": {
        "operationId": "FriendshipsController_getPending",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Amizades"
        ]
      }
    }
  },
  "info": {
    "title": "Heat Me Up API",
    "description": "API para videochat com amigos e desconhecidos.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usuário",
            "example": "usuario@exemplo.com"
          },
          "username": {
            "type": "string",
            "description": "Nome de usuário",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "description": "Senha do usuário (mínimo 6 caracteres)",
            "example": "senha123",
            "minLength": 6
          },
          "socialProvider": {
            "type": "string",
            "description": "Provedor de autenticação social",
            "enum": [
              "google",
              "facebook",
              "twitter",
              "none"
            ],
            "example": "google"
          }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usuário",
            "example": "usuario@exemplo.com"
          },
          "username": {
            "type": "string",
            "description": "Nome de usuário",
            "example": "johndoe"
          },
          "socialProvider": {
            "type": "string",
            "description": "Provedor de autenticação social",
            "enum": [
              "google",
              "facebook",
              "twitter",
              "none"
            ],
            "example": "google"
          },
          "id": {
            "type": "string",
            "description": "ID do usuário",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "id"
        ]
      },
      "SignupDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usuário",
            "example": "usuario@exemplo.com"
          },
          "password": {
            "type": "string",
            "description": "Senha do usuário (mínimo 6 caracteres)",
            "example": "senha123",
            "minLength": 6
          },
          "username": {
            "type": "string",
            "description": "Nome de usuário (opcional)",
            "example": "usuario123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usuário",
            "example": "usuario@exemplo.com"
          },
          "password": {
            "type": "string",
            "description": "Senha do usuário",
            "example": "senha123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CreateUserProfileDto": {
        "type": "object",
        "properties": {
          "age": {
            "type": "number",
            "description": "Idade do usuário",
            "example": 25
          },
          "height": {
            "type": "number",
            "description": "Altura do usuário em centímetros",
            "example": 180
          },
          "weight": {
            "type": "number",
            "description": "Peso do usuário em quilogramas",
            "example": 75
          },
          "bodyHair": {
            "type": "string",
            "description": "Pelos corporais",
            "enum": [
              "hairy",
              "trimmed",
              "smooth",
              "waxed",
              "shaved",
              "partially hairy"
            ],
            "example": "smooth"
          },
          "skinColor": {
            "type": "string",
            "description": "Cor da pele",
            "enum": [
              "type_1",
              "type_2",
              "type_3",
              "type_4",
              "type_5",
              "type_6",
              "mixed",
              "other"
            ],
            "example": "type_1"
          },
          "hairColor": {
            "type": "string",
            "description": "Cor do cabelo",
            "enum": [
              "blonde",
              "brunette",
              "light brown",
              "dark brown",
              "black",
              "red",
              "auburn",
              "gray",
              "white",
              "bald",
              "dyed",
              "other"
            ],
            "example": "blonde"
          },
          "eyeColor": {
            "type": "string",
            "description": "Cor dos olhos",
            "enum": [
              "honey",
              "light brown",
              "dark brown",
              "light blue",
              "dark blue",
              "light green",
              "dark green",
              "black",
              "gray",
              "hazel",
              "amber",
              "heterochromia",
              "other"
            ],
            "example": "light blue"
          },
          "preferredPosition": {
            "type": "string",
            "description": "Posição preferida",
            "enum": [
              "top",
              "bottom",
              "versatile",
              "versatile + top",
              "versatile + bottom",
              "no penetration"
            ],
            "example": "versatile"
          },
          "tribe": {
            "type": "array",
            "description": "Tribo",
            "example": [
              "cub",
              "chubby"
            ],
            "items": {
              "type": "string",
              "enum": [
                "twink",
                "bear",
                "chubby",
                "cahser",
                "daddy",
                "jock",
                "drag",
                "otter",
                "geek",
                "leather",
                "cub",
                "chub",
                "twunk",
                "wolf",
                "butch",
                "femme",
                "androgynous",
                "trans",
                "queer",
                "non binary",
                "genderfluid",
                "other"
              ]
            }
          },
          "relationshipStatus": {
            "type": "string",
            "description": "Status de relacionamento",
            "enum": [
              "single",
              "married",
              "open_relationship",
              "widowed",
              "divorced",
              "separated",
              "complicated",
              "polyamorous"
            ],
            "example": "single"
          }
        }
      },
      "UpdateUserProfileDto": {
        "type": "object",
        "properties": {}
      },
      "FriendshipStatus": {
        "type": "string",
        "enum": [
          "pending",
          "accepted",
          "rejected",
          "blocked"
        ],
        "description": "Status da amizade"
      },
      "UpdateFriendshipStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "description": "Status da amizade",
            "example": "accepted",
            "allOf": [
              {
                "$ref": "#/components/schemas/FriendshipStatus"
              }
            ]
          }
        },
        "required": [
          "status"
        ]
      }
    }
  }
}